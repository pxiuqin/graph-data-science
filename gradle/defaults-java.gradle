allprojects {
    plugins.withType(JavaLibraryPlugin) {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11

        repositories {
            mavenCentral()
            if (project.hasProperty('pipelineRepository')) {
                maven {
                    url = "file://${project.getProperty('pipelineRepository')}"
                }
            }
            maven {
                name = 'teamcity-artifacts'
                url = "file://${rootProject.projectDir}/neo4j-repo"
            }
            mavenLocal()
        }

        task sourcesJar(type: Jar) {
            classifier = 'sources'
            from(sourceSets.main.allJava)
        }

        javadoc {
            StandardJavadocDocletOptions opts = (options as StandardJavadocDocletOptions)
            opts.addBooleanOption('Xdoclint:all,-missing', true)
        }

        task javadocJar(type: Jar) {
            classifier = 'javadoc'
            from javadoc
        }

        test {
            maxHeapSize = "4G"
            useJUnitPlatform {
                includeEngines 'junit-jupiter'
            }
            // enable verbose test logging
            // testLogging {
            //     events "passed", "skipped", "failed", "standardOut", "standardError"
            // }
            testLogging {
                afterSuite { desc, result ->
                    if (!desc.parent) { // will match the outermost suite
                        println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                    }
                }
            }
        }

        tasks.withType(JavaCompile) {
            sourceCompatibility = JavaVersion.VERSION_11
            targetCompatibility = JavaVersion.VERSION_11
            options.warnings = true
            options.encoding = 'UTF-8'
            options.compilerArgs += [
                    '-parameters',
                    '-Xlint:all,-cast,-deprecation,-processing,-serial,-try,-unchecked,-varargs',
                    '-Xmaxerrs', '1337'
            ]
        }
    }
}
